<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Membership">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />
	<typeAlias alias="membershipVO" type="egovframework.membership.vo.MembershipVO" />
	<typeAlias alias="mainVO" type="egovframework.calendar.vo.MainVO" />

	<!-- 회원 가입 -->
	<insert id="membershipDAO.registerMembership" parameterClass="membershipVO">
		<selectKey resultClass="int" keyProperty="memberSeq">
			SELECT IFNULL(MAX(MEMBER_SEQ), 0) + 1 FROM MEMBER_TBL
		</selectKey>
		INSERT INTO MEMBER_TBL
		(MEMBER_SEQ, MEMBER_ID, MEMBER_PW, MEMBER_NAME, MEMBER_PHONE, MEMBER_EMAIL, MEMBER_SCHOOL,
		 MEMBER_MAJOR, MEMBER_GRADE, MEMBER_FLG)
		VALUES
		(#memberSeq#, #memberId#, #memberPw#, #memberName#, #memberPhone#, #memberEmail#, #memberSchool#,
		 #memberMajor#, #memberGrade#, 'N')
	</insert>
	
	<!-- 회원 로그인 로직 -->
	<!-- 1. 회원 암호 체크 -->
	<select id="membershipDAO.checkMemberPw" parameterClass="membershipVO" resultClass="java.lang.String">
		SELECT MEMBER_PW AS memberPw
		  FROM MEMBER_TBL
		 WHERE MEMBER_ID = #memberId#
	</select>
	
	<!-- 2. 회원 암호가 맞다면 로그인 로직 실행 -->
	<select id="membershipDAO.getMemberInfo" parameterClass="membershipVO" resultClass="membershipVO">
		SELECT MEMBER_SEQ as memberSeq
		     , MEMBER_ID as memberId
		     , MEMBER_PW as memberPw
		     , MEMBER_NAME as memberName
		     , MEMBER_EMAIL as memberEmail
		     , MEMBER_PHONE as memberPhone
		     , MEMBER_SCHOOL as memberSchool
		     , MEMBER_MAJOR as memberMajor
		     , MEMBER_GRADE as memberGrade
		     , MEMBER_FLG as memberFlg
		  FROM MEMBER_TBL
		 WHERE MEMBER_ID = #memberId#
	</select>
	
	<!-- 회원 수정 -->
	<update id="membershipDAO.updateMemberInfo" parameterClass="membershipVO">
		UPDATE MEMBER_TBL
		   SET MEMBER_PW = #memberPw#
		     , MEMBER_EMAIL = #memberEmail#
		     , MEMBER_PHONE = #memberPhone#
		     , MEMBER_SCHOOL = #memberSchool#
		     , MEMBER_MAJOR = #memberMajor#
		     , MEMBER_GRADE = #memberGrade#
		 WHERE MEMBER_ID = #memberId#
	</update>
	
	<!-- 회원 탈퇴 -->
	<!-- 1. 가입된 스터디가 있을 경우 스터디 회원에서 삭제 -->
	<delete id="membershipDAO.deleteStudyMemberByOwned" parameterClass="membershipVO">
		DELETE FROM STUDY_MBR_TBL
		 WHERE MEMBER_SEQ = #memberSeq#
	</delete>
	<!-- 2. 회원이 작성한 메모 일괄 삭제 -->
	<delete id="membershipDAO.deleteMemoByOwned" parameterClass="membershipVO">
		DELETE FROM MEMO_TBL
		 WHERE MEMBER_SEQ = #memberSeq#
	</delete>
	<!-- 3. 해당 회원으로 작성된 게시글이 있을 경우 게시글 삭제 -->
	<delete id="memberDAO.deleteBbsByOwned" parameterClass="membershipVO">
		DELETE FROM BBS_TBL
		 WHERE MEMBER_SEQ = #memberSeq#
	</delete>
	<!-- 4. 회원 탈퇴 -->
	<delete id="membershipDAO.deleteMember" parameterClass="membershipVO">
		DELETE FROM MEMBER_TBL
		 WHERE MEMBER_SEQ = #memberSeq#
	</delete>
	
	<!-- 나의 스터디 목록 -->
	<!-- 1. LEFT 메뉴 노출용 - 2건만 노출 -->
	<select id="membershipDAO.selectMyStudyLeftMenuList" parameterClass="membershipVO" resultClass="mainVO">
		SELECT A.STUDY_SEQ as study_seq
		     , A.STUDY_TITLE as study_title
		  FROM STUDY_TBL AS A
		     , STUDY_MBR_TBL AS B
		 WHERE 1=1
		   AND A.STUDY_SEQ = B.STUDY_SEQ
		   AND A.STUDY_FLG = 'Y'
		   AND B.MEMBER_SEQ = #memberSeq#
		 LIMIT 2
	</select>
	
	<!-- 2. MY STUDY 리스트 용 -->
	<select id="membershipDAO.selectMyStudyList" parameterClass="membershipVO" resultClass="mainVO">
		SELECT A.STUDY_SEQ as study_seq
		     , A.MEMBER_SEQ as member_seq
		     , A.STUDY_TITLE as study_title
		     , A.STUDY_DESC as study_desc
		     , C.MAJOR_NM as study_major
		     , A.STUDY_MEM_LIMIT as study_mem_limit
		     , A.STUDY_GRD_LIMIT as study_grd_limit
		     , A.STUDY_FLG as study_flg
		  FROM STUDY_TBL as A
		     , STUDY_MBR_TBL as B
		     , MAJOR_TBL as C
		 WHERE 1=1
		   AND A.STUDY_SEQ = B.STUDY_SEQ
		   AND A.STUDY_MAJOR = C.MAJOR_SEQ
		   AND B.MEMBER_SEQ = #memberSeq#
		   AND A.STUDY_FLG = 'Y'
		 ORDER BY A.STUDY_SEQ DESC
		 LIMIT #startPage#, #pageSize#
	</select>

</sqlMap>
